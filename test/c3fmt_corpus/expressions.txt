================================================================================
expressions
================================================================================

fn void main() 
{ 
int a = b*2/1-1+3%1;
b%= 10+a;
b&=a;
b|=a;
b^=a;
b&&&a;
b|||a;
b+++a;
b/=a;
a==s;
a>=s;
a<=s;
a>=s;
a-=s;
a+=s;
a*=s;
a%=s;
a!=s;
a  ++  s;
--  a;
a<<1;
a>>1;
return;
}

--------------------------------------------------------------------------------

fn void main()
{
    int a = b * 2 / 1 - 1 + 3 % 1;
    b %= 10 + a;
    b &= a;
    b |= a;
    b ^= a;
    b &&& a;
    b ||| a;
    b +++ a;
    b /= a;
    a == s;
    a >= s;
    a <= s;
    a >= s;
    a -= s;
    a += s;
    a *= s;
    a %= s;
    a != s;
    a++s;
    --a;
    a << 1;
    a >> 1;
    return;
}

================================================================================
simple_expressions
================================================================================

fn void 
main() { 
bool a =(a||b)&&c; 
int bin = (1&2)&3;
int bin = &a + (1&2)|&a;
int* bin = (int*)&a;
b = *(int*)&a;
b = (*a = 2);
b = { .work = 1, .work=2};
int** ptr = &(*(int*)&a);
 (  void) free(data);
    (void * * )free(data);
    int* bin = &&1;
return;
}

--------------------------------------------------------------------------------

fn void main()
{
    bool a = (a || b) && c;
    int bin = (1 & 2) & 3;
    int bin = &a + (1 & 2) | &a;
    int* bin = (int*)&a;
    b = *(int*)&a;
    b = (* a = 2);
    b = {.work = 1, .work = 2};
    int** ptr = &(*(int*)&a);
    (void)free(data);
    (void**)free(data);
    int* bin = && 1;
    return;
}

================================================================================
ternary
================================================================================

fn void 
main() { 
bool a = foo    ? bar   : 1;
return file ?: file_open_errno()?;
return i ?: Foo.X?;
return x ?: (y ?: x);
assert((root.get_int("yyy") ?? -1) == -1);
double x = ((double)testError() + testError()) ?? 100;
io::printfn("6:%s", @catch((3 > 2 ? Foo.ABC? : 4) ?? Foo.DEF?));
}

--------------------------------------------------------------------------------

fn void main()
{
    bool a = foo ? bar : 1;
    return file ?: file_open_errno() ?;
    return i ?: Foo.X?;
    return x ?: (y ?: x);
    assert((root.get_int("yyy") ?? - 1) == - 1);
    double x = ((double)testError() + testError()) ?? 100;
    io::printfn("6:%s", @catch((3 > 2 ? Foo.ABC? : 4) ?? Foo.DEF?));
}


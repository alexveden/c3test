================================================================================
simple_struct
================================================================================

struct 
Person {
    char age;   String name; }
--------------------------------------------------------------------------------

struct Person
{
    char age;
    String name;
}

================================================================================
simple_sub_struct
================================================================================

struct 
Person @extern(  "foo") {
    struct foo // its a kinda struct
    { int bar; struct zoo @if(asd || dda) { int c;}}
    }
    struct Friend {
        bool or_foe;
    }
--------------------------------------------------------------------------------

struct Person @extern(  "foo")
{
    struct foo  // its a kinda struct
    {
        int bar;
        struct zoo @if(asd || dda)
        {
            int c;
        }
    }
}

struct Friend
{
    bool or_foe;
}

================================================================================
struct_union_inline
================================================================================

union
Person @extern(  "foo") {
inline    Pet    cat  ;
    struct foo // its a kinda struct
    { int bar; union zoo @if(asd || dda) { int  [34 ] c;}}
    }
--------------------------------------------------------------------------------

union Person @extern(  "foo")
{
    inline Pet cat;
    struct foo  // its a kinda struct
    {
        int bar;
        union zoo @if(asd || dda)
        {
            int[34] c;
        }
    }
}

================================================================================
bitstruct
================================================================================
bitstruct Foo: 
char 
@bigendian
{
    int a : 0..2;   int b : 4..6;   bool c : 7;
}
--------------------------------------------------------------------------------

bitstruct Foo : char @bigendian
{
    int a: 0..2;
    int b: 4..6;
    bool c: 7;
}

================================================================================
bitstruct_char_array
================================================================================
bitstruct Test2 : char[4] @bigendian
{
    ushort a : 0..15;
    ushort b : 16..31;
}
--------------------------------------------------------------------------------

bitstruct Test2 : char[4] @bigendian
{
    ushort a: 0..15;
    ushort b: 16..31;
}

================================================================================
simple_enum
================================================================================
enum State
{
    WAITING,    RUNNING,    TERMINATED
}
--------------------------------------------------------------------------------

enum State
{
    WAITING,
    RUNNING,
    TERMINATED
}

================================================================================
simple_enum_multi_comma
================================================================================
enum State:
int @test @if( asd || bar)
{
    WAITING,    RUNNING,    TERMINATED,
}
--------------------------------------------------------------------------------

enum State : int @test @if( asd || bar)
{
    WAITING,
    RUNNING,
    TERMINATED,
}

================================================================================
enum_associated
================================================================================
enum State : int @if("foo") (
String desc, bool active, Position pos
) @test
{
    WAITING    = { "waiting", false, { 1, 2} }, // this is a comment
    RUNNING    = { "running", true,  {12,22} },
    TERMINATED = { "ended",   false, { 0, 0} },
}
--------------------------------------------------------------------------------

enum State : int @if("foo") (String desc, bool active, Position pos) @test
{
    WAITING = {"waiting", false, {1, 2}},  // this is a comment
    RUNNING = {"running", true, {12, 22}},
    TERMINATED = {"ended", false, {0, 0}},
}

================================================================================
enum_associated_definition_wrapping
================================================================================
enum State : int @if("foo") (
String desc, bool active, Position pos, FooooLong type, AnotherLoong Type, maybe_one_more
) @test
{
    WAITING    = { "waiting", false, { 1, 2} }, // this is a comment
    RUNNING    = { "running", true,  {12,22} },
    TERMINATED = { "ended",   false, { 0, 0} },
}
--------------------------------------------------------------------------------

enum State : int @if("foo") (
    String desc,
    bool active,
    Position pos,
    FooooLong type,
    AnotherLoongType,
    maybe_one_more
) @test
{
    WAITING = {"waiting", false, {1, 2}},  // this is a comment
    RUNNING = {"running", true, {12, 22}},
    TERMINATED = {"ended", false, {0, 0}},
}

================================================================================
enum_associated_magic_comma
================================================================================
enum State : int @if("foo") (
String desc, bool active, Position pos
) @test
{
    WAITING    = { "waiting", false, { 1, 2}, }, // this is a comment
    RUNNING    = { "running", true,  {12,22,} },
    TERMINATED = { "ended",   false, { 0, 0} },
}
--------------------------------------------------------------------------------

enum State : int @if("foo") (String desc, bool active, Position pos) @test
{
    WAITING = {
        "waiting",
        false,
        {1, 2},
    },  // this is a comment
    RUNNING = {"running", true, {12, 22, }},
    TERMINATED = {"ended", false, {0, 0}},
}


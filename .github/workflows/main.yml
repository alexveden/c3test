name: CI

on:
  push:
    branches: [ main, dev, ci_testing, experiments ]
  pull_request:
    branches: [ main, dev ]

env:
  LLVM_RELEASE_VERSION_WINDOWS: 18
  LLVM_RELEASE_VERSION_MAC: 17
  LLVM_RELEASE_VERSION_LINUX: 17
  LLVM_RELEASE_VERSION_UBUNTU20: 17
  LLVM_DEV_VERSION: 21
jobs:

  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      # Don't abort runners if a single one fails
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        llvm_version: [18]

    steps:
      - name: Checkout c3tools 
      - uses: actions/checkout@v4

      - name: Checkout c3c compiler source
        uses: actions/checkout@v4
        with:
          repository: c3lang/c3c
          path: c3c
        run: |
          cd c3c/

      - name: Install common deps
        run: |
          sudo apt-get install zlib1g zlib1g-dev python3 ninja-build curl

      - name: Install Clang ${{matrix.llvm_version}}
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          if [[ "${{matrix.llvm_version}}" < 18 ]]; then
            sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${{matrix.llvm_version}} main"
            sudo apt-get update
            sudo apt-get install -y -t llvm-toolchain-focal-${{matrix.llvm_version}} libpolly-${{matrix.llvm_version}}-dev \
              clang-${{matrix.llvm_version}} llvm-${{matrix.llvm_version}} llvm-${{matrix.llvm_version}}-dev \
              lld-${{matrix.llvm_version}} liblld-${{matrix.llvm_version}}-dev libmlir-${{matrix.llvm_version}} \
              libmlir-${{matrix.llvm_version}}-dev mlir-${{matrix.llvm_version}}-tools
          else
            if [[ "${{matrix.llvm_version}}" < "${{env.LLVM_DEV_VERSION}}" ]]; then
              sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${{matrix.llvm_version}} main"
              sudo apt-get update
              sudo apt-get install -y -t llvm-toolchain-focal-${{matrix.llvm_version}} libpolly-${{matrix.llvm_version}}-dev \
                clang-${{matrix.llvm_version}} llvm-${{matrix.llvm_version}} llvm-${{matrix.llvm_version}}-dev \
                lld-${{matrix.llvm_version}} liblld-${{matrix.llvm_version}}-dev
            else
              sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main"
              sudo apt-get install -y -t llvm-toolchain-focal libpolly-${{matrix.llvm_version}}-dev \
                clang-${{matrix.llvm_version}} llvm-${{matrix.llvm_version}} llvm-${{matrix.llvm_version}}-dev \
                lld-${{matrix.llvm_version}} liblld-${{matrix.llvm_version}}-dev
            fi
          fi

      - name: CMake18
        if: matrix.llvm_version >= 18 && matrix.llvm_version != env.LLVM_DEV_VERSION
        run: |
          cd ../c3c/
          cmake -B build \
                -G Ninja \
                -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
                -DCMAKE_C_COMPILER=clang-${{matrix.llvm_version}} \
                -DCMAKE_CXX_COMPILER=clang++-${{matrix.llvm_version}} \
                -DCMAKE_LINKER=lld-link-${{matrix.llvm_version}} \
                -DCMAKE_OBJCOPY=llvm-objcopy-${{matrix.llvm_version}} \
                -DCMAKE_STRIP=llvm-strip-${{matrix.llvm_version}} \
                -DCMAKE_DLLTOOL=llvm-dlltool-${{matrix.llvm_version}} \
                -DC3_LLVM_VERSION=${{matrix.llvm_version}}.1
          cmake --build build

      - name: C3 Compile and run some examples
        run: |
          cd resources
          ../build/c3c compile examples/base64.c3
          ../build/c3c compile-run examples/args.c3 -- foo -bar "baz baz"

      - name: Compile run unit tests
        run: |
          cd test
          ../build/c3c compile-test unit

      - name: run compiler tests
        run: |
          cd test
          python3 src/tester.py ../build/c3c test_suite/

